CREATE SCHEMA RESTAURANTE;

USE RESTAURANTE;

CREATE TABLE tipos (
  `id_tipos` INT NOT NULL,
  `tipo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_tipos`));


CREATE TABLE funcionarios (
  id_funcionarios INT NOT NULL,
  nome VARCHAR(80) NOT NULL,
  tipos INT NOT NULL,
  PRIMARY KEY (id_funcionarios));
  
	ALTER TABLE FUNCIONARIOS ADD COLUMN `RESTAURANTE`
    INT NOT NULL;
    
    ALTER TABLE funcionarios ADD CONSTRAINT `restaurantess`
    FOREIGN KEY (`RESTAURANTE`)
    REFERENCES `RESTAURANTE`(`ID_RESTAURANTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION;
    
      ALTER TABLE funcionarios ADD CONSTRAINT `tipos`
    FOREIGN KEY (`tipos`)
    REFERENCES `tipos`(`id_tipos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION;
    
    	ALTER TABLE FUNCIONARIOS ADD COLUMN `salario`
    INT NOT NULL;
    


CREATE TABLE `cliente` (
  `id_cliente` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_cliente`))
;

CREATE TABLE `pedidos`(
`id_pedidos` INT NOT NULL PRIMARY KEY,
`cliente` INT NOT NULL,
`pratos` INT NOT NULL,
`restaurante` INT NOT NULL);

  ALTER TABLE pedidos ADD CONSTRAINT `cliente`
    FOREIGN KEY (`cliente`)
    REFERENCES `CLIENTE`(`ID_CLIENTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION;
    
	ALTER TABLE pedidos ADD CONSTRAINT `nomePrato`
    FOREIGN KEY (`pratos`)
    REFERENCES `pratos`(`id_prato`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION;
    
	ALTER TABLE pedidos ADD CONSTRAINT `restaurantes`
    FOREIGN KEY (`RESTAURANTE`)
    REFERENCES `RESTAURANTE`(`ID_RESTAURANTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION;
    
	ALTER TABLE pedidos ADD CONSTRAINT `entregador`
    FOREIGN KEY (`entregador`)
    REFERENCES `entregador`(`id_entregador`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION;
    
    ALTER TABLE pedidos ADD COLUMN `entregador`
    INT NOT NULL;
     

CREATE TABLE `entregador` (
  `id_entregador` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_entregador`));

CREATE TABLE `restaurante` (
  id_restaurante INT NOT NULL,
  nome VARCHAR(45),
  PRIMARY KEY (id_restaurante));
 
CREATE TABLE `pratos` (
  `id_prato` INT NOT NULL,
  `nomePrato` VARCHAR(45) NOT NULL,
  `restaurante` INT NOT NULL,
  PRIMARY KEY (`id_prato`));
  
    ALTER TABLE pratos ADD CONSTRAINT `restaurante`
    FOREIGN KEY (`RESTAURANTE`)
    REFERENCES `RESTAURANTE`(`ID_RESTAURANTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION;
    
    ALTER TABLE PRATOS ADD COLUMN `PRECO`
    INT NOT NULL;
    
SELECT * FROM PRATOS;
SELECT * FROM RESTAURANTE;
SELECT * FROM PEDIDOS;
SELECT * FROM ENTREGADOR;
SELECT * FROM CLIENTE; 
SELECT * FROM FUNCIONARIOS;
SELECT * FROM TIPOS; 

-------------------------------------------------------


SELECT NOME, TIPO FROM FUNCIONARIOS /*CHAMA OS TIPOS DE FUNCIONÁRIOS DISPONÍVEIS.*/
LEFT OUTER JOIN tipos ON TIPOS.ID_TIPOS = FUNCIONARIOS.TIPOS;

SELECT PRATOS.NOMEPRATO, CLIENTE.NOME FROM PEDIDOS /*CHAMA OS NOMES DOS PRATOS COMPRADOS POR UM CLIENTE*/
LEFT OUTER JOIN CLIENTE ON CLIENTE.ID_CLIENTE = PEDIDOS.CLIENTE
LEFT OUTER JOIN PRATOS ON PRATOS.ID_PRATO = PEDIDOS.PRATOS;

SELECT ENTREGADOR.NOME, NOMEPRATO FROM PEDIDOS /*CHAMA OS NOMES DOS PRATOS ENTREGUES POR UM ENTREGADOR*/
LEFT OUTER JOIN PRATOS ON PRATOS.ID_PRATO = PEDIDOS.PRATOS
LEFT OUTER JOIN ENTREGADOR ON ENTREGADOR.ID_ENTREGADOR = PEDIDOS.ENTREGADOR;

SELECT FUNCIONARIOS.NOME, RESTAURANTE.NOME FROM FUNCIONARIOS /*CHAMA OS NOMES DOS FUNCIONÁRIOS DE UM RESTAURANTE*/
LEFT OUTER JOIN RESTAURANTE ON RESTAURANTE.ID_RESTAURANTE = FUNCIONARIOS.RESTAURANTE;

SELECT ID_PEDIDOS, RESTAURANTE.NOME FROM PEDIDOS /*CHAMA O ID DOS PEDIDOS DE UM RESTAURANTE.*/
LEFT OUTER JOIN RESTAURANTE ON RESTAURANTE.ID_RESTAURANTE = PEDIDOS.RESTAURANTE;

------------------------------------------------------------

SELECT FUNCIONARIOS.NOME, RESTAURANTE.NOME FROM FUNCIONARIOS /*CHAMA O NOME DOS FUNCIONÁRIOS E O NOME DO RESTAURANTE AO QUAL ELES TRABALHAM*/
LEFT OUTER JOIN RESTAURANTE ON RESTAURANTE.ID_RESTAURANTE = FUNCIONARIOS.RESTAURANTE
ORDER BY ID_RESTAURANTE;

SELECT ID_PEDIDOS, RESTAURANTE.NOME FROM PEDIDOS /*CHAMA OS PEDIDOS E O RESTAURANTE RESPECTIVO*/
LEFT OUTER JOIN RESTAURANTE ON RESTAURANTE.ID_RESTAURANTE = PEDIDOS.RESTAURANTE
ORDER BY ID_RESTAURANTE;

SELECT PRATOS.NOMEPRATO, PRATOS.PRECO FROM PRATOS /*ORDENA PRATOS PELO PREÇO MAIS BARATO*/
ORDER BY PRECO ASC;

SELECT PRATOS.NOMEPRATO, PRATOS.PRECO FROM PRATOS /*ORDENA PRATOS PELO PREÇO MAIS CARO*/
ORDER BY PRECO DESC;


--------------------------------------------

SELECT CLIENTE.NOME, COUNT(ID_PEDIDOS) FROM CLIENTE /*CONTA A QUANTIDADE DE PEDIDOS DE UM CLIENTE*/
LEFT OUTER JOIN PEDIDOS ON PEDIDOS.CLIENTE = CLIENTE.ID_CLIENTE
GROUP BY ID_CLIENTE;

SELECT ENTREGADOR.NOME, COUNT(ID_PEDIDOS) NUM_ENTREGAS FROM ENTREGADOR /*CONTA A QUANTIDADE DE PEDIDOS DE UM ENTREGADOR*/
LEFT OUTER JOIN PEDIDOS ON PEDIDOS.ENTREGADOR = ENTREGADOR.ID_ENTREGADOR
GROUP BY ID_ENTREGADOR;

SELECT RESTAURANTE.NOME, COUNT(CLIENTE) FROM PEDIDOS /*CONTA A QUANTIDADE DE CLIENTES DE UM RESTAURANTE*/
LEFT OUTER JOIN RESTAURANTE ON PEDIDOS.RESTAURANTE = RESTAURANTE.ID_RESTAURANTE
GROUP BY ID_RESTAURANTE;

SELECT RESTAURANTE.NOME, COUNT(ID_FUNCIONARIOS)NUM_FUNC FROM FUNCIONARIOS /*CONTA OS FUNCIONÁRIOS DE UM RESTAURANTE*/
LEFT OUTER JOIN RESTAURANTE ON FUNCIONARIOS.RESTAURANTE = RESTAURANTE.ID_RESTAURANTE
GROUP BY ID_RESTAURANTE;

SELECT RESTAURANTE.NOME, COUNT(ID_PRATO)NUM_PRATOS FROM PRATOS /*CONTA A QUANTIDADE DE PRATOS EM RESTAURANTE*/
LEFT OUTER JOIN RESTAURANTE ON PRATOS.RESTAURANTE = RESTAURANTE.ID_RESTAURANTE
GROUP BY ID_RESTAURANTE;

---------------------------------------------

SELECT RESTAURANTE.NOME, COUNT(ENTREGADOR) FROM PEDIDOS
LEFT OUTER JOIN RESTAURANTE ON PEDIDOS.RESTAURANTE = RESTAURANTE.ID_RESTAURANTE
GROUP BY ID_RESTAURANTE
ORDER BY ID_RESTAURANTE;

SELECT ENTREGADOR.NOME, COUNT(ID_PEDIDOS) FROM ENTREGADOR
LEFT OUTER JOIN PEDIDOS ON PEDIDOS.ENTREGADOR = ENTREGADOR.ID_ENTREGADOR
GROUP BY ID_ENTREGADOR;

SELECT CLIENTE.NOME, COUNT(ID_PEDIDOS) FROM PEDIDOS
LEFT OUTER JOIN CLIENTE ON CLIENTE.ID_CLIENTE = PEDIDOS.CLIENTE
GROUP BY ID_CLIENTE;

--------------------------------------------------

SELECT max(salario) MAXIMO_SALARIO FROM FUNCIONARIOS;/*MOSTRA O MAIOR SALARIO DE FUNC*/

SELECT AVG(SALARIO) MEDIA_SALARIAL FROM FUNCIONARIOS;/*MOSTRA A MÉDIA SALARIAL DE FUNCIONÁRIOS*/

SELECT MIN(SALARIO) MENOR_SALARIO FROM FUNCIONARIOS;/*MOSTRA O MENOR SALÁRIO DE FUNCIONÁRIOS*/

SELECT RESTAURANTE.NOME, SUM(SALARIO) SOMA_TOTAL_SALARIO FROM FUNCIONARIOS
LEFT OUTER JOIN restaurante ON FUNCIONARIOS.RESTAURANTE = RESTAURANTE.ID_RESTAURANTE
GROUP BY ID_RESTAURANTE;

SELECT RESTAURANTE.NOME, AVG(SALARIO) SALARIO_MEDIA FROM FUNCIONARIOS
LEFT OUTER JOIN restaurante ON FUNCIONARIOS.RESTAURANTE = RESTAURANTE.ID_RESTAURANTE
GROUP BY ID_RESTAURANTE;

SELECT NOME, AVG(PRECO) PRECO_MEDIA FROM PRATOS
LEFT OUTER JOIN restaurante ON PRATOS.RESTAURANTE = RESTAURANTE.ID_RESTAURANTE
GROUP BY ID_RESTAURANTE;

SELECT NOME, SUM(PRECO) VALOR_VENDIDO FROM PEDIDOS
LEFT OUTER JOIN restaurante ON PEDIDOS.RESTAURANTE = RESTAURANTE.ID_RESTAURANTE
LEFT OUTER JOIN PRATOS ON PEDIDOS.PRATOS = PRATOS.ID_PRATO
GROUP BY ID_RESTAURANTE;

----------------------------------------

CREATE VIEW `5_MAIORES_SALARIOS` AS 
SELECT SALARIO FROM FUNCIONARIOS
ORDER BY SALARIO DESC LIMIT 5;

CREATE VIEW `5_MENORES_SALARIOS` AS 
SELECT SALARIO FROM FUNCIONARIOS
ORDER BY SALARIO ASC LIMIT 5;

CREATE VIEW `3_PRATOS_MAIS_CAROS` AS
SELECT NOMEPRATO FROM PRATOS
ORDER BY ID_PRATO DESC LIMIT 3;

CREATE VIEW `3_CLIENTES_COM_MAIS_PEDIDOS`AS
SELECT CLIENTE.NOME, COUNT(ID_PEDIDOS) FROM CLIENTE
LEFT OUTER JOIN PEDIDOS ON PEDIDOS.CLIENTE = CLIENTE.ID_CLIENTE
ORDER BY ID_CLIENTE DESC LIMIT 3;

CREATE VIEW `2_ENTREGADORES_COM_MAIS_ENTREGAS`AS
SELECT ENTREGADOR.NOME, COUNT(ID_PEDIDOS) NUM_ENTREGAS FROM ENTREGADOR
LEFT OUTER JOIN PEDIDOS ON PEDIDOS.ENTREGADOR = ENTREGADOR.ID_ENTREGADOR
ORDER BY ID_ENTREGADOR DESC LIMIT 2;

------------------------------------------

START TRANSACTION;

SAVEPOINT savePoint1;
INSERT INTO RESTAURANTE VALUES(
'33', 'FUNNY FEELINGS');


SAVEPOINT savePoint2;
INSERT INTO ENTREGADOR VALUES(
'16', 'DJORKAEF PONTR');


SAVEPOINT savePoint3;
INSERT INTO TIPOS VALUES(
'5', 'AUXILIAR ADMNISTRATIVO');


SAVEPOINT savePoint4;
INSERT INTO PRATOS VALUES(
'17', 'pizza', '4', '44');


SAVEPOINT savePoint5;
INSERT INTO cliente VALUES(
'16', 'Joel');

----------------------------------

create user 
'Arthur'@'localhost' identified by '5678';
grant create, insert on FUNCIONARIOS to 'Arthur'@'locashost';


create user 
'Arthur'@'localhost' identified by '5678';
grant create, insert on RESTAURANTE to 'Arthur'@'locashost';

create user 
'Cardoso'@'localhost' identified by '1234';
grant select on RESTAURANTE.`2_entregadores_com_mais_entregas` 
to 'Cardoso'@'locashost';
grant select on restaurante.`3_clientes_com_mais_pedidos`
to 'Cardoso'@'locashost';
grant select on restaurante.`3_pratos_mais_caros`
to 'Cardoso'@'locashost';
grant select on RESTAURANTE.`5_maiores_salarios`
to 'Cardoso'@'locashost';
grant select on RESTAURANTE.`5_menores_salarios`
to 'Cardoso'@'locashost';
